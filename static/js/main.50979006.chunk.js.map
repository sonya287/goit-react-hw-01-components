{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendsList.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Profile/default-image.png","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Profile","src","name","tag","location","stats","profile","description","alt","avatar","moreInfo","stat_list","label","quantity","followers","views","likes","defaultProps","defaultImage","Statistics","title","statistics","map","id","percentage","item","style","backgroundColor","Math","round","random","FriendsList","friends","friend_list","isOnline","online","offline","width","TransactionHistory","transactions","transaction_history","table_head","type","amount","currency","table_row","table_cell","App","user","statisticalData","FriendList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50979006.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2FfNs\",\"description\":\"Profile_description__TY7pI\",\"avatar\":\"Profile_avatar__1ofO7\",\"name\":\"Profile_name__uXO7F\",\"moreInfo\":\"Profile_moreInfo__ofLHU\",\"stats\":\"Profile_stats__GOu3B\",\"stat_list\":\"Profile_stat_list__3-4eC\",\"label\":\"Profile_label__IZ9qj\",\"quantity\":\"Profile_quantity__v23za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2TJIB\",\"table_head\":\"TransactionHistory_table_head__1_Cgu\",\"table_cell\":\"TransactionHistory_table_cell__2jIOP\",\"table_row\":\"TransactionHistory_table_row__3g1jH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2wov4\",\"title\":\"Statistics_title__1ysXR\",\"stat_list\":\"Statistics_stat_list__1fRO0\",\"item\":\"Statistics_item__29L_g\",\"label\":\"Statistics_label__3rjAq\",\"percentage\":\"Statistics_percentage__2lzZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendsList_friend_list__2Wn_b\",\"item\":\"FriendsList_item__rMC0W\",\"status\":\"FriendsList_status__2GuWZ\",\"online\":\"FriendsList_online__3G0WI FriendsList_status__2GuWZ\",\"offline\":\"FriendsList_offline__2XCXz FriendsList_status__2GuWZ\",\"name\":\"FriendsList_name__33l80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3FMAJ\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\nexport default Container;\n","export default __webpack_public_path__ + \"static/media/default-image.3ad98a37.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultImage from './default-image.png';\n\nimport styles from './Profile.module.css';\n\nconst Profile = ({ src, name, tag, location, stats }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={src} alt={name} className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.moreInfo}>@{tag}</p>\n        <p className={styles.moreInfo}>{location}</p>\n      </div>\n      <ul className={styles.stats}>\n        <li className={styles.stat_list}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li className={styles.stat_list}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li className={styles.stat_list}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\nProfile.defaultProps = {\n  src: defaultImage,\n};\nProfile.propTypes = {\n  src: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst randomColor = () => {\n  return `rgb(${Math.round(Math.random() * 333)},${Math.round(\n    Math.random() * 333,\n  )},${Math.round(Math.random() * 333)})`;\n};\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.stat_list}>\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <li\n              key={id}\n              className={styles.item}\n              style={{ backgroundColor: randomColor() }}\n            >\n              <span className={styles.label}>{label}</span>\n              <span className={styles.percentage}>{percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FriendsList.module.css';\n\nconst FriendsList = ({ friends }) => {\n  return (\n    <ul className={styles.friend_list}>\n      {friends.map(({ avatar, name, isOnline, id }) => {\n        return (\n          <li className={styles.item} key={id}>\n            <span className={isOnline ? styles.online : styles.offline}></span>\n            <img src={avatar} alt={name} width=\"48\" />\n            <p className={styles.name}>{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\nexport default FriendsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.transaction_history}>\n      <thead>\n        <tr>\n          <th className={styles.table_head}>Type</th>\n          <th className={styles.table_head}>Amount</th>\n          <th className={styles.table_head}>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(({ id, type, amount, currency }) => {\n          return (\n            <tr key={id} className={styles.table_row}>\n              <td className={styles.table_cell}>{type}</td>\n              <td className={styles.table_cell}>{amount}</td>\n              <td className={styles.table_cell}>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\nexport default TransactionHistory;\n","import React from 'react';\n\nimport user from './components/Profile/user.json';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nimport Container from './components/Container/Container';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nconst App = () => {\n  return (\n    <Container>\n      <Profile\n        src={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}